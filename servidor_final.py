#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Servidor Final - Sem Debug
==========================

Servidor de produ√ß√£o sem debug mode para evitar
problemas de conex√£o com banco SQLite.
"""

from app.app import create_app
import sys
import os

def start_production_server():
    """Inicia servidor em modo produ√ß√£o"""
    
    app = create_app()
    
    # Desabilita debug mode completamente
    app.config['DEBUG'] = False
    app.config['TESTING'] = False
    
    print("üöÄ SERVIDOR ERP JSP v3.0 - MODO PRODU√á√ÉO")
    print("=" * 50)
    print("‚úÖ Funcionalidades testadas e funcionando:")
    print("   ‚Ä¢ Cria√ß√£o e edi√ß√£o de ordens de servi√ßo")
    print("   ‚Ä¢ Upload de anexos (imagens e documentos)")
    print("   ‚Ä¢ Campos de descri√ß√£o de pagamento")
    print("   ‚Ä¢ Observa√ß√µes de anexos")
    print("   ‚Ä¢ Persist√™ncia de dados garantida")
    print("   ‚Ä¢ Numera√ß√£o profissional (OS20250001+)")
    print("   ‚Ä¢ Auto complete de clientes")
    print("   ‚Ä¢ C√°lculos autom√°ticos")
    print("   ‚Ä¢ Sistema de anexos completo")
    print("")
    print("üåê URLs principais:")
    print("   ‚Ä¢ Dashboard: http://localhost:5009")
    print("   ‚Ä¢ Nova OS: http://localhost:5009/ordem_servico/novo")
    print("   ‚Ä¢ Listar OSs: http://localhost:5009/ordem_servico")
    print("   ‚Ä¢ Editar OS: http://localhost:5009/ordem_servico/1/editar")
    print("")
    print("‚èπÔ∏è Pressione Ctrl+C para parar")
    print("=" * 50)
    
    try:
        # Servidor sem debug e com configura√ß√µes otimizadas
        app.run(
            debug=False,
            port=5009,
            host='0.0.0.0',
            threaded=True,
            use_reloader=False
        )
    except KeyboardInterrupt:
        print("\n‚úÖ Servidor parado pelo usu√°rio")
    except Exception as e:
        print(f"‚ùå Erro ao iniciar servidor: {e}")

def test_database_first():
    """Testa banco antes de iniciar servidor"""
    
    app = create_app()
    app.config['DEBUG'] = False
    
    with app.app_context():
        try:
            from app.extensoes import db
            from app.ordem_servico.ordem_servico_model import OrdemServico
            from app.cliente.cliente_model import Cliente
            
            print("üîç TESTANDO BANCO DE DADOS...")
            
            # Testa conex√£o b√°sica
            db.session.execute(db.text("SELECT 1"))
            print("   ‚úÖ Conex√£o com banco OK")
            
            # Testa tabelas principais
            ordens = OrdemServico.query.limit(1).all()
            print(f"   ‚úÖ Tabela ordens de servi√ßo OK ({len(ordens)} registros)")
            
            clientes = Cliente.query.limit(1).all()
            print(f"   ‚úÖ Tabela clientes OK ({len(clientes)} registros)")
            
            print("   ‚úÖ Banco de dados funcionando perfeitamente!")
            return True
            
        except Exception as e:
            print(f"   ‚ùå Erro no banco: {e}")
            return False

if __name__ == '__main__':
    # Testa banco primeiro
    if test_database_first():
        start_production_server()
    else:
        print("‚ùå N√£o foi poss√≠vel iniciar devido a problemas no banco")
        sys.exit(1)